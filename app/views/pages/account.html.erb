<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat" />
<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
/>

<%= render :partial => "account_header/header" %>
<%= include_gon(:init => true) %>

<!-- Moved Notice here as a placeholder. Will move it after stylizing account page -->
<p class='notice'><%= notice %></p>
<p class='alert'><%= alert %></p>

<h1 style="text-align: center">Account Dashboard</h1><br/>

<!--Graphs display on load-->
<script>
var ready;
ready = function() 
{
  changeAnalyticsNewer();
  changeTimeIntervalM();
};
$(document).ready(ready);
$(document).on('page:load', ready);
</script>

<!--Analytics -->
<div class="analytics-container">
  <div class="card bg-light mb-3 card-main">
    <div class="card-header"><h4><b>Analytics</b></h4></div>
    <br>
    <div class="chart">
      <div id="display" style="height: 400px; width: 400px; text-align: center; color: #fff; line-height: 300px; font-size: 14px; 
        font-family: Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif; margin-bottom: 20px; display: flex">
          <canvas width="1162" height="375" class="chartjs-render-monitor" style="display: block; height: 300px; width: 930px;">
      </div>
    </div>
    <p id="analytics_data">Showing data for the first survey</p>
    <div>
      <button class="btn btn-primary btn-sm" onclick="changeAnalyticsOlder()">Older</button>
      <input id="cntr" name="cntr" type="hidden" value="0" />
      <button class="btn btn-primary btn-sm" onclick="changeAnalyticsNewer()">Newer</button>
    </div>
  </div>

  <% # Line plot %>
  <div class="card bg-light mb-3 card-main">
    <div class="card-header"><h4><b>Mood Tracker</b></h4></div>
    <br />
    <div id="display2" class="chart">
      <canvas width="1162" height="375" class="chartjs-render-monitor" style="display: block; height: 300px; width: 930px;">
    </div>
    <div class="linechart-buttons">
      <button class="btn btn-primary btn-sm" onclick="changeTimeIntervalM()">Past 4 Surveys</button>
      <button class="btn btn-primary btn-sm" onclick="changeTimeInterval2M()">Past 8 Surveys</button>
      <button class="btn btn-primary btn-sm" onclick="changeTimeInterval3M()">Past 12 Surveys</button>
      <!--button class="linechart-btn" onclick="changeTimeInterval6M()">Past 24 Surveys</button-->
      <!--button class="linechart-btn" onclick="changeTimeIntervalY()">Past 48 Surveys</button-->
    </div>
    <br /><br />
  </div>
</div>

<br/><br/><br/><br/>

<div class="wordcloud-container" id="wordcloud-box">
  <div class="card bg-light mb-3 card-main">

    <ul class="nav nav-tabs card-header wordcloud-header" style="color: black;">
      <li class="nav-item">
        <div class="dropdown">
          <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <% mros = [] %>
            <% if !@wordcloud_surveys.empty? %>
              <% mros = @wordcloud_surveys%>
              <%= mros[0].name%>
            <% else %>
              Open Ended Survey
            <% end %>
          </button>
          <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <% @surveys.each do |survey| %>
              <% if Question.find_by(survey_id: survey.id).question_type == "open_ended"%>
                <a class="dropdown-item" href="/account?wordcloud_survey_id=<%=survey.id%>#wordcloud-box"><%=survey.name%></a>
              <%end%>
            <% end %>
          </div>
        </div>

      </li>
      <li class="nav-item">
        <div class="dropdown">
          <% max_elapsed = OpenEndedResponse.where(manager: current_manager, question: Question.where(survey: @wordcloud_surveys)).maximum("elapsed") %>
          <% if max_elapsed === nil %>
            <% max_elapsed = 0 %>
          <% end %>
          <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <%=@selected_elapsed%> surveys ago
            
          </button>
          <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <% if max_elapsed === 0%>
              <a class="dropdown-item" href="">0 surveys ago</a>
            <%else%>
              <% (0..max_elapsed).each do |i|%>
                <a class="dropdown-item" href="/account?wordcloud_survey_id=<%=@selected_survey_id%>&elapsed=<%=i%>#wordcloud-box"><%=i%> surveys ago</a>
              <%end%>
            <%end%>
          </div>
        </div>
      </li>
      <li class="nav-item">
          <a class="nav-link active" data-toggle="tab" href="#positive"><span style="color: black;">Most Positively Viewed</span></a>
      </li>
      <li class="nav-item">
          <a class="nav-link" data-toggle="tab" href="#negative"><span style="color: black;">Most Negatively Viewed</span></a>
      </li>
      <li class="nav-item">
          <a class="nav-link" data-toggle="tab" href="#controversial"><span style="color: black;">Most Controversial</span></a>
      </li>
      <li class="nav-item">
          <a class="nav-link" data-toggle="tab" href="#improved"><span style="color: black;">Most Improved in Peer Review</span></a>
      </li>
      <li class="nav-item">
          <a class="nav-link" data-toggle="tab" href="#drop"><span style="color: black;">Most Drop in Peer Review</span></a>
      </li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade show active" id="positive">
          <% a = [] %>
          <% if !most_positive.empty? %>
            <div class="row">
              <div class = "col-8 ">
                <div class="wordcloud-container">
                  <% a = most_positive %>
                  <div id="positiveCloud" class="wordcloud-container"></div>
                </div>
              </div>
              <div class="col-3 border-left">
                <br/><br/><br/>
                <h3>Detailed Rankings</h3>
                <br/>
                <div class="text-left mx-2">
                  <% most_positive.each_with_index do |result, index| %>
                    <span><%= index + 1 %>. <%= result[0] %>  (score: <%= result[1].round(2) %>) </span><br />
                  <% end %>
                </div>
              </div>
            </div>
          <% else %>
            <div class="wordcloud-container">
              <br /><br /><br /><br />
              <span style="color: black;">No data yet!</span>
              <br/><br/>
            </div>
          <% end %>
        </div>
        <div class="tab-pane fade" id="negative">
          <% b = [] %>
          <% if !most_negative.empty? %>
            <div class="row">
              <div class = "col-8 ">
                <div class="wordcloud-container">
                  <% b = most_negative %>
                  <div id="negativeCloud" class="wordcloud-container"></div>
                </div>
              </div>
              <div class="col-3 border-left">
                <br/><br/><br/>
                <h3>Detailed Rankings</h3>
                <br/>
                <div class="text-left mx-2">
                  <% most_negative.each_with_index do |result, index| %>
                    <span><%= index + 1 %>. <%= result[0] %>  (score: <%= result[1].round(2) %>) </span><br />
                  <% end %>
                </div>
              </div>
            </div>
          <% else %>
            <div class="wordcloud-container">
              <br /><br /><br /><br />
              <span style="color: black;">No data yet!</span>
              <br/><br/>
            </div>
          <% end %>
        </div>
        <div class="tab-pane fade" id="controversial">
          <% c = [] %>
          <% if !most_controversial.empty? %>
            <div class="row">
              <div class = "col-8 ">
                <div class="wordcloud-container">
                  <% c = most_controversial %>
                  <br /><br /><br /><br />
                  <div id="controversialCloud" class="wordcloud-container"></div>
                </div>
              </div>
              <div class="col-3 border-left">
                <br/><br/><br/>
                <h3>Detailed Rankings</h3>
                <br/>
                <div class="text-left mx-2">
                  <% most_controversial.each_with_index do |result, index| %>
                    <span><%= index + 1 %>. <%= result[0] %>  (std dev: <%= result[1].round(2) %>) </span><br />
                  <% end %>
                </div>
              </div>
            </div>
          <% else %>
            <div class="wordcloud-container">
              <br /><br /><br /><br />
              <span style="color: black;">No one was mentioned by two or more people.</span>
              <br/><br/>
            </div>
          <% end %>
        </div>
        <div class="tab-pane fade" id="improved">
          <% d = [] %>
          <% if !most_improve_review.empty? %>
            <div class="row">
              <div class = "col-8 ">
                <div class="wordcloud-container">
                  <% d = most_improve_review %>
                  <br /><br /><br /><br />
                  <div id="improvedCloud" class="wordcloud-container"></div>
                </div>
              </div>
              <div class="col-3 border-left">
                <br/><br/><br/>
                <h3>Detailed Rankings</h3>
                <br/>
                <div class="text-left mx-2">
                  <% most_improve_review.each_with_index do |result, index| %>
                    <span><%= index + 1 %>. <%= result[0] %>  (score-change: <%= result[1].round(2) %>) </span><br />
                  <% end %>
                </div>
              </div>
            </div>
          <% else %>
            <div class="wordcloud-container">
              <br /><br /><br /><br />
              <span style="color: black;">No one was mentioned consecutively.</span>
              <br/><br/>
            </div>
          <% end %>
        </div>
        <div class="tab-pane fade" id="drop">
          <% e = [] %>
          <% if !most_drop_review.empty? %>
            <div class="row">
              <div class = "col-8 ">
                <div class="wordcloud-container">
                  <% e = most_drop_review %>
                  <br /><br /><br /><br />
                  <div id="dropCloud" class="wordcloud-container"></div>
                </div>
              </div>
              <div class="col-3 border-left">
                <br/><br/><br/>
                <h3>Detailed1 Rankings</h3>
                <br/>
                <div class="text-left mx-2">
                  <% most_drop_review.each_with_index do |result, index| %>
                    <span><%= index + 1 %>. <%= result[0] %>  (score-change: <%= result[1].round(2) %>) </span><br />
                  <% end %>
                </div>
              </div>
            </div>
          <% else %>
            <div class="wordcloud-container">
              <br /><br /><br /><br />
              <span style="color: black;">No one was mentioned consecutively.</span>
              <br/><br/>
            </div>
          <% end %>

        </div>
    </div>
  </div>  
</div>
<br /><br /><br /><br />

<!-- <br />
<br />
<div class="wordcloud-container">
  <div class="card bg-light mb-3">
    <div class="card-header"><h4><b>Most Mentioned Names</b></h4></div>
    <br />
    <% if !(EntityNlp.where(manager_id: current_manager)).empty? %>
      <% f = EntityNlp.where(manager_id: current_manager) %>
      <% f_grouped = f.group(:name).sum(:count).sort_by(&:last).reverse %>
      <br />
      <br />
      <br />
      <br />
      <div id="wordCloud" class="wordcloud-container"></div>
    <% else %>
      <br />
      <span style="color: black;">No data yet!</span>
      <br/>
      <br/>
    <% end %>
  </div>
</div> -->



<div style="display: flex; align-items: center; justify-content: center; position: relative; margin: 0 auto;">
  <div class="card bg-light mb-3 card-main" style="padding-top:20px; width: 1040px;">
    <div id="react_note"> </div>
  </div>
</div>
<br/><br/><br/>


<style>
  body {
    /* font-family: Arial, Helvetica, sans-serif; */
    background: white;
  }

  h1, h3, h4, p {
    color: black;
  }

  ol {
    text-align: center;
    list-style-position: inside;
  }

  .survey-container {
    color: black;
    margin-left: 20px;
    align-items: center;
    flex-direction: column;
    text-align: center
  }

  .analytics-container {
    /* background: #262728; */
    display: flex;
    border-radius: 25px;
    /* align-items: center; */
    /* flex-direction: column; */
    /* max-width: 95wv; */
    justify-content: center;
    position: relative;
    /* left: 23%; */
    margin: 0 auto;
    text-align: center;
  }

  .wordcloud-header {
    background-color: #f0f1f2;
    width: 1000px;
  }

  .nav-link.active {
    font-weight: bold;
  }

  .card-main {
    margin-left: 100px;
    margin-right: 100px;
  }
  
  .piechart {
    background: #262728;
    width: 500px;
    height: 600px;
    float: left;
    border-radius: 25px;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  }

  .linechart {
    background: #262728;
    width: 500px;
    height: 600px;
    margin-left: 80px;
    border-radius: 25px;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  }

  .insight-wrapper{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 27px;
    grid-auto-rows: minmax(100px, auto);
    /* grid-auto-columns: 400px; */
  }

  .insight-piece {
    background: #6c757d;
    width: 250px;
    height: 260px;
    color: black;
    border-radius: 25px;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  }

  .right-insight {
    background: #262728;
    width: 250px;
    height: 250px;
    float: left;
    margin-left: 26px;
  }

  .chart{
    height: 400px; width: 400px; text-align: center; color: #fff; line-height: 300px; font-size: 14px; 
    font-family: Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif; margin-bottom: 10px; display: flex; margin: 0 auto;
  }

  .linechart-buttons{
    margin-top: 40px;
  }

  .linechart-btn {
    border-radius: 50px;
    background-color: white;
    color: black;
    padding: 10px;
    font-size: 14px;
    outline: none;
    border: none;
    cursor: pointer;
    text-decoration: none;
  }

  .btn {
    margin-left: 10px;
    margin-right: 10px;
  }

  .surveys-dashboard{
    padding-top: 10px;
    width: 1080px;
    margin: 0 auto;
  }

  .wordcloud {
    padding-top: 10px;
    width: 1000px;
    margin: 0 auto;
    align-items: center;
    display: flex;
    margin-top:200px;
  }

  .wordcloud-container {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    margin: 0 auto;
    text-align: center;
    height: 500px;
  }

  .insight-2side{
    display:flex;
    width: 1000px;
  }

  /* .insight-leftside{
    width: 756px;
  } */

  .insight-rightside{
    width: 224px;
  }

  .modal {
    display: none;
    position: fixed;
    z-index: 1;
    padding-top: 100px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgb(0, 0, 0);
    background-color: rgba(0, 0, 0, 0.4);
  }

  .modal-content {
    position: relative;
    background-color: #fefefe;
    margin: auto;
    padding: 0;
    border: 1px solid #888;
    width: 20%;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    -webkit-animation-name: animatetop;
    -webkit-animation-duration: 0.4s;
    animation-name: animatetop;
    animation-duration: 0.4s;
  }

  .modal-body {
    padding: 5%;
  }

  /* commented this because this made the Sign Out text color white
  a:visited {
    color: rgb(255, 255, 255);
  } */

  @-webkit-keyframes animatetop {
    from {
      top: -300px;
      opacity: 0;
    }
    to {
      top: 0;
      opacity: 1;
    }
  }

  @keyframes animatetop {
    from {
      top: -300px;
      opacity: 0;
    }
    to {
      top: 0;
      opacity: 1;
    }
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }
</style>

<script>

  var numMood = [];
  function recordSurveyData(moodReponse)
  {
    numMood.push(0);

  }

  var results = [];
  function storeSurveyData(QID, responseName) {}

  function changeAnalyticsNewer() 
  {
    var cntr = document.getElementById('cntr').value;
    var dummyData = [["Good", 0], ["Okay", 0], ["Bad", 0], ["Terrible", 0], ["Amazing", 0]];
    
    var Manager = gon.Manager;
    var Surveys = gon.Surveys;
    var AllQuestions = gon.questions; 

    var AllSurveys = Surveys.filter(function(survey){
      return survey.manager_id == Manager.id
    });

    //console.log(AllSurveys);
    
    var MRS = [];
    for(var i = 0; i < AllSurveys.length; i++)
    {
      MRS = AllQuestions.filter(function(question){
        return question.survey_id == AllSurveys[i].id && question.question_type == "mood";
      });

      if(MRS.length != 0)
      {
        break;
      }
    }

    //console.log(MRS);

    if(MRS.length == 0)
    {
      document.getElementById('analytics_data').innerHTML = 'Showing data for ' + 'no' + ' surveys';
      new Chartkick.PieChart(document.getElementById("display"), dummyData, {colors: ["#00ff00", "#8e8e96", "#ff4500", "#8b0000", "#008000"]});
    }

    else
    {
      var responses = [];
      var MoodResponse = gon.MoodResponse;

      for(var i = 0; i < MRS.length; i++)
      {
        responses[i] = MoodResponse.filter(function(mResponse){
              return mResponse.question_id == MRS[i].id;
            });
      }

      //console.log(responses);

      var max = responses[0][0].elapsed;
      var counter = cntr;

      if(counter > 0)
        counter--;

      for(var j = 0; j < responses[0].length; j++)
      {
        if(responses[0][j].elapsed == counter)
        {
          if(responses[0][j].response == "good")
            dummyData[0][1]++;
          
          else if(responses[0][j].response == "okay")
            dummyData[1][1]++;

          else if(responses[0][j].response == "bad")
            dummyData[2][1]++;

          else if(responses[0][j].response == "terrible")
            dummyData[3][1]++;

          else if(responses[0][j].response == "amazing")
            dummyData[4][1]++;
        }
      }
      
      new Chartkick.PieChart(document.getElementById("display"), dummyData, {colors: ["#00ff00", "#8e8e96", "#ff4500", "#8b0000", "#008000"]});
    }

    document.getElementById('analytics_data').innerHTML = 'Showing data for survey #' + (max - counter + 1);

    document.getElementById('cntr').value = counter;
  }

  function changeAnalyticsOlder() 
  {
    var cntr = document.getElementById('cntr').value;
    var dummyData = [["Good", 0], ["Okay", 0], ["Bad", 0], ["Terrible", 0], ["Amazing", 0]];
    
    var Manager = gon.Manager;
    var Surveys = gon.Surveys;
    var AllQuestions = gon.questions; 

    var AllSurveys = Surveys.filter(function(survey){
      return survey.manager_id == Manager.id
    });

    //console.log(AllSurveys);
    
    var MRS = [];
    for(var i = 0; i < AllSurveys.length; i++)
    {
      MRS = AllQuestions.filter(function(question){
        return question.survey_id == AllSurveys[i].id && question.question_type == "mood";
      });

      if(MRS.length != 0)
      {
        break;
      }
    }

    //console.log(MRS);

    if(MRS.length == 0)
    {
      document.getElementById('analytics_data').innerHTML = 'Showing data for ' + 'no' + ' surveys';
      new Chartkick.PieChart(document.getElementById("display"), dummyData, {colors: ["#00ff00", "#8e8e96", "#ff4500", "#8b0000", "#008000"]});
    }

    else
    {
      var responses = [];
      var MoodResponse = gon.MoodResponse;

      for(var i = 0; i < MRS.length; i++)
      {
        responses[i] = MoodResponse.filter(function(mResponse){
              return mResponse.question_id == MRS[i].id;
            });
      }

      //console.log(responses);

      var max = responses[0][0].elapsed;
      var counter = cntr;

      if(counter < max)
        counter++;

      for(var j = 0; j < responses[0].length; j++)
      {
        if(responses[0][j].elapsed == counter)
        {
          if(responses[0][j].response == "good")
            dummyData[0][1]++;
          
          else if(responses[0][j].response == "okay")
            dummyData[1][1]++;

          else if(responses[0][j].response == "bad")
            dummyData[2][1]++;

          else if(responses[0][j].response == "terrible")
            dummyData[3][1]++;

          else if(responses[0][j].response == "amazing")
            dummyData[4][1]++;
        }
      }
      
      new Chartkick.PieChart(document.getElementById("display"), dummyData, {colors: ["#00ff00", "#8e8e96", "#ff4500", "#8b0000", "#008000"]});

      document.getElementById('analytics_data').innerHTML = 'Showing data for survey #' + (max - counter + 1);
    
      document.getElementById('cntr').value = counter;
    }
  }

  /*
  function changeTimeIntervalY() 
  {
    // these are dummy data
    new Chartkick.LineChart(document.getElementById("display2"), [["1/9",2.2],["4/9",2.7],["7/9",2.5],["10/1",2.8],["12/9",2.4],["1/8",2.2],["4/8",2.7],["7/8",2.5],["10/8",2.8],["12/8",2.4]], {});
  }
  
  function changeTimeInterval6M() 
  {
    // these are dummy data
    new Chartkick.LineChart(document.getElementById("display2"), [["1/9",2.2],["4/9",2.7],["7/9",2.5],["10/1",2.8]], {});
  }
  */

  function changeTimeInterval3M() 
  {
    var Manager = gon.Manager;
    var Surveys = gon.Surveys;
    var AllQuestions = gon.questions; 

    var AllSurveys = Surveys.filter(function(survey){
      return survey.manager_id == Manager.id
    });
    
    var MRS = [];
    for(var i = 0; i < AllSurveys.length; i++)
    {
      MRS = AllQuestions.filter(function(question){
        return question.survey_id == AllSurveys[i].id && question.question_type == "mood";
      });

      if(MRS.length != 0)
      {
        break;
      }
    }

    if(MRS.length == 0)
    {
      new Chartkick.LineChart(document.getElementById("display2"), [["12",0],["11",0],["10",0],["9",0],["8",0],["7",0],["6",0],["5",0],["4",0],["3",0],["2",0],["1",0]], {});
    }

    else 
    {
      var responses = [];
      var MoodResponse = gon.MoodResponse;
      var data = [["12",0],["11",0],["10",0],["9",0],["8",0],["7",0],["6",0],["5",0],["4",0],["3",0],["2",0],["1",0]];

      for(var i = 0; i < MRS.length; i++)
      {
        responses[i] = MoodResponse.filter(function(mResponse){
              return mResponse.question_id == MRS[i].id;
            });
      }

      var max = responses[0][0].elapsed;
      var negCtr = 11;

      for(var i = 0; i < 12; i++)
      {
        var avg = 0;
        for(var j = 0; j < responses[0].length; j++)
        {
          if(responses[0][j].elapsed == i)
          {
            if(responses[0][j].response == "good")
                avg += 1;
              
            else if(responses[0][j].response == "bad")
                avg -= 1;

            else if(responses[0][j].response == "terrible")
                avg -= 2;

            else if(responses[0][j].response == "amazing")
                avg += 2;
          }
        }

        if(max - i >= 0)
        {
          data[negCtr][0] = "#" + (max-i+1);
          data[negCtr][1] = avg;
          negCtr--;
        }
      }

      new Chartkick.LineChart(document.getElementById("display2"), data, {});
    }
  }

  function changeTimeInterval2M() 
  {
    var Manager = gon.Manager;
    var Surveys = gon.Surveys;
    var AllQuestions = gon.questions; 

    var AllSurveys = Surveys.filter(function(survey){
      return survey.manager_id == Manager.id
    });
    
    var MRS = [];
    for(var i = 0; i < AllSurveys.length; i++)
    {
      MRS = AllQuestions.filter(function(question){
        return question.survey_id == AllSurveys[i].id && question.question_type == "mood";
      });

      if(MRS.length != 0)
      {
        break;
      }
    }

    if(MRS.length == 0)
    {
      new Chartkick.LineChart(document.getElementById("display2"), [["8",0],["7",0],["6",0],["5",0],["4",0],["3",0],["2",0],["1",0]], {});
    }

    else 
    {
      var responses = [];
      var MoodResponse = gon.MoodResponse;
      var data = [["8",0],["7",0],["6",0],["5",0],["4",0],["3",0],["2",0],["1",0]];

      for(var i = 0; i < MRS.length; i++)
      {
        responses[i] = MoodResponse.filter(function(mResponse){
              return mResponse.question_id == MRS[i].id;
            });
      }

      var max = responses[0][0].elapsed;
      var negCtr = 7;

      for(var i = 0; i < 8; i++)
      {
        var avg = 0;
        for(var j = 0; j < responses[0].length; j++)
        {
          if(responses[0][j].elapsed == i)
          {
            if(responses[0][j].response == "good")
                avg += 1;
              
            else if(responses[0][j].response == "bad")
                avg -= 1;

            else if(responses[0][j].response == "terrible")
                avg -= 2;

            else if(responses[0][j].response == "amazing")
                avg += 2;
          }
        }

        if(max - i >= 0)
        {
          data[negCtr][0] = "#" + (max-i+1);
          data[negCtr][1] = avg;
          negCtr--;
        }
      }

      new Chartkick.LineChart(document.getElementById("display2"), data, {});
    }
  }
  
  function changeTimeIntervalM() 
  {
    var Manager = gon.Manager;
    var Surveys = gon.Surveys;
    var AllQuestions = gon.questions; 

    var AllSurveys = Surveys.filter(function(survey){
      return survey.manager_id == Manager.id
    });
    
    var MRS = [];
    for(var i = 0; i < AllSurveys.length; i++)
    {
      MRS = AllQuestions.filter(function(question){
        return question.survey_id == AllSurveys[i].id && question.question_type == "mood";
      });

      if(MRS.length != 0)
      {
        break;
      }
    }

    if(MRS.length == 0)
    {
      new Chartkick.LineChart(document.getElementById("display2"), [["4",0],["3",0],["2",0],["1",0]], {legend: true, legend: "top"});
    }

    else 
    {
      var responses = [];
      var MoodResponse = gon.MoodResponse;
      var data = [["4",0], ["3",0], ["2",0], ["1",0]];

      for(var i = 0; i < MRS.length; i++)
      {
        responses[i] = MoodResponse.filter(function(mResponse){
              return mResponse.question_id == MRS[i].id;
            });
      }

      var max = responses[0][0].elapsed;
      var negCtr = 3;

      for(var i = 0; i < 4; i++)
      {
        var count = 0;
        var avg = 0;

        for(var j = 0; j < responses[0].length; j++)
        {
          if(responses[0][j].elapsed == i)
          {
            count++;

            if(responses[0][j].response == "good")
                avg += 1;
              
            else if(responses[0][j].response == "bad")
                avg -= 1;

            else if(responses[0][j].response == "terrible")
                avg -= 2;

            else if(responses[0][j].response == "amazing")
                avg += 2;
          }
        }

        if(max - i >= 0)
        {
          max_x = count * 2;
          min_x = count * -2;
          avg = 2((avg - min_x) / (max_x - min_x)) - 1

          data[negCtr][0] = "#" + (max-i+1);
          data[negCtr][1] = avg;
          negCtr--;
        }
      }

      new Chartkick.LineChart(document.getElementById("display2"), data, {});
    }
  }
</script>


<!--WORD CLOUD SCRIPT AND STYLE (from jQWCloud)-->

<link href="https://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<%= render "jqw_cloud.js" %>

<script>
  $(document).ready(function()
  {    
    word_list = [];
    group = <%=raw f_grouped %>;

    $.each(group, function(key, value) {
      word_list.push({word: value[0], weight: parseInt(value[1] * 10)});
    });

    positive_list = [];
    positive_group = <%= raw a %>;

    $.each(positive_group, function(key, value) {
      positive_list.push({word: value[0], weight: parseInt(value[1] * 10)});
    });

    negative_list = [];
    negative_group = <%= raw b %>;

    $.each(negative_group, function(key, value) {
      negative_list.push({word: value[0], weight: parseInt(Math.abs(value[1]*10)) });
    });

    controversial_list = [];
    controversial_group = <%= raw c %>;

    $.each(controversial_group, function(key, value) {
      controversial_list.push({word: value[0], weight: parseInt(value[1] * 10)});
    });

    improved_list = [];
    improved_group = <%= raw d %>;

    $.each(improved_group, function(key, value) {
      improved_list.push({word: value[0], weight: parseInt(value[1] * 10)});
    });

    drop_list = [];
    drop_group = <%= raw e %>;

    $.each(drop_group, function(key, value) {
      drop_list.push({word: value[0], weight: parseInt(Math.abs(value[1]*10)) });
    });
    
    $("#wordCloud").jQWCloud({
      words: word_list,
      //cloud_color: 'yellow',		
      minFont: 30,
      maxFont: 80,
      //fontOffset: 5,
      //cloud_font_family: 'Owned',
      //verticalEnabled: false,
      padding_left: 1,
      //showSpaceDIV: true,
      //spaceDIVColor: 'white',
      word_common_classes: 'WordClass'
    });

    // console.log(" \n positive list: ", positive_list);
    if(positive_list.length > 0){
      $("#positiveCloud").jQWCloud({
        words: positive_list,
        //cloud_color: 'yellow',		
        minFont: 30,
        maxFont: 80,
        //fontOffset: 5,
        //cloud_font_family: 'Owned',
        //verticalEnabled: false,
        padding_left: 1,
        //showSpaceDIV: true,
        //spaceDIVColor: 'white',
        word_common_classes: 'WordClass'
      });
    }

    if(negative_list.length > 0){
      $("#negativeCloud").jQWCloud({
        words: negative_list,
        //cloud_color: 'yellow',		
        minFont: 30,
        maxFont: 80,
        padding_left: 1,
        word_common_classes: 'WordClass'
      });
    }

    if(controversial_list.length > 0){
      $("#controversialCloud").jQWCloud({
        words: controversial_list,
        //cloud_color: 'yellow',		
        minFont: 30,
        maxFont: 80,
        padding_left: 1,
        word_common_classes: 'WordClass'
      });
    }

    if(improved_list.length > 0){
      $("#improvedCloud").jQWCloud({
        words: improved_list,	
        minFont: 30,
        maxFont: 80,
        padding_left: 1,
        word_common_classes: 'WordClass'
      });
    }

    if(drop_list.length > 0){
      $("#dropCloud").jQWCloud({
        words: drop_list,	
        minFont: 30,
        maxFont: 80,
        padding_left: 1,
        word_common_classes: 'WordClass'
      });
    }
    
  });

</script>
